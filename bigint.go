package main

import (
	"math/big"
)

const smallestInt = ``

func compareBigInts(ar []string) interface{} {
	if len(ar) < 2 {
		return -1
	}
	l, sl := "", ""
	l = smallestInt
	sl = smallestInt
	for _, num := range ar {
		n0 := new(big.Int)
		n0, ok := n0.SetString(num, 10)
		if !ok {
			continue
		}

		n1 := new(big.Int)
		n1, ok = n1.SetString(l, 10)
		if !ok {
			continue
		}

		cmp := n0.Cmp(n1)

		if cmp == 1 {
			sl = l
			l = num
			continue
		}

		//

		n2 := new(big.Int)
		n2, ok = n2.SetString(sl, 10)
		if !ok {
			continue
		}

		cmp = n0.Cmp(n2)

		if cmp == 1 {
			sl = num
			continue
		}
	}
	if sl == smallestInt || l == sl {
		return -1
	}
	return sl
}
